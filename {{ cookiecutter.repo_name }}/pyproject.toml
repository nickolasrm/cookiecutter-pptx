[tool.poetry]
name = "{{ cookiecutter.python_package }}"
version = "{{ cookiecutter.version }}"
description = "{{ cookiecutter.description }}"
authors = [
    {% set authors = cookiecutter.author.split(',') -%}
    {% set emails = cookiecutter.email.split(',') -%}
    {% for author in authors -%}
    "{{ authors[loop.index0].strip() }} <{{ emails[loop.index0].strip() }}>",
    {% endfor -%}
]
license = "MIT"
readme = "README.md"
packages = [{include = "{{ cookiecutter.python_package }}"}]

[tool.poetry.dependencies]
python = "^3.9"

[tool.poetry.group.dev.dependencies]
flake8 = "^5.0.4"
black = "^22.10.0"
mypy = "^0.982"
pre-commit = "^2.20.0"
pylint = "^2.15.4"
isort = "^5.10.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.1.3"
pytest-cov = "^4.0.0"
tomli = "^2.0.1"

[tool.poetry.group.docs]
optional=true

[tool.poetry.group.docs.dependencies]
furo = "^2022.9.29"
Sphinx = "^5.2.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
addopts = """
-x tests {{ cookiecutter.python_package }} \
--disable-warnings \
--capture=tee-sys \
--doctest-modules \
--cov-report term-missing \
--cov-report xml \
--cov-report html \
--junitxml=junit/test-results.xml \
--cov {{ cookiecutter.python_package }} -ra"""

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "raise NotImplementedError", "pass"]
fail_under = 0
show_missing = true
